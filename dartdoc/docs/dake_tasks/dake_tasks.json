{"name":"dake_tasks","qualifiedName":"dake_tasks/dake_tasks","comment":"<p>Features needed to propose command line tasks through Dake.</p>\n<p>Please refer to <a href=\"http://pub.dartlang.org/packages/dake_tasks\">the documentation</a> to understand how to use this package.</p>","variables":{"dakeRepo":{"name":"dakeRepo","qualifiedName":"dake_tasks/dake_tasks.dakeRepo","comment":"<p>Singleton repository usable for inter-class task dependencies.</p>\n<p>If you have an inter-class task dependency (a task in a class that depends on another task in another class),\nyou can use this object to access the instance of the other class.</p>\n<p>class TasksClassA {</p>\n<pre><code>@Task(\"A composite task\")\nFuture compositeTask() {\n    return dakeRepo[TasksClassB].simpleTask().then((_) =&gt; _doSomething());\n}\n</code></pre>","final":false,"static":false,"constant":false,"type":[{"outer":"dake_tasks/dake_tasks.DakeRepo","inner":[]}],"annotations":[]}},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"DakeMain":{"name":"DakeMain","qualifiedName":"dake_tasks/dake_tasks.DakeMain","comment":"<p>Main function for DakeTasks.dart.</p>\n<p>In your DakeTasks.dart, you should have a main that is only:</p>\n<pre><code>main(List&lt;String&gt; args, SendPort port) =&gt; DakeMain([Cls1, Cls2], args, port);\n</code></pre>\n<p>Where the first argument is a list of classes that contains your tasks.</p>\n<p>While it is <strong>NOT</strong> recommended to have a DakeTasks.dart file that can be executed on its own, you can do it\nand use DakeMain only if DakeTasks.dart was launched through dake:</p>\n<pre><code>main(List&lt;String&gt; args, SendPort port) {\n    if (isDake(args, port))\n        DakeMain([Cls1, Cls2], args, port);\n    else\n        MyOwnMain(args, port);\n</code></pre>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"taskClasses":{"name":"taskClasses","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.Type","inner":[]}]}],"value":null,"annotations":[]},"args":{"name":"args","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"value":null,"annotations":[]},"sendPort":{"name":"sendPort","optional":false,"named":false,"default":false,"type":[{"outer":"dart-isolate.SendPort","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"isDake":{"name":"isDake","qualifiedName":"dake_tasks/dake_tasks.isDake","comment":"<p>Returns whether or not this main was called for Dake.</p>\n<p>Please use it ONLY if:</p><ol><li>You know what you are doing.</li><li>You absolutely have to.</li></ol>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"args":{"name":"args","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"value":null,"annotations":[]},"sendPort":{"name":"sendPort","optional":false,"named":false,"default":false,"type":[{"outer":"dart-isolate.SendPort","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"classes":{"class":[{"name":"DakeClosable","qualifiedName":"dake_tasks/dake_tasks.DakeClosable","preview":"<p>Interface that the task class may implement to be called on program's end.</p>"},{"name":"DakeRepo","qualifiedName":"dake_tasks/dake_tasks.DakeRepo","preview":"<p>Singleton repository.</p>"},{"name":"Namespace","qualifiedName":"dake_tasks/dake_tasks.Namespace","preview":"<p>Annotation: The namespace of a task class.</p>"},{"name":"Param","qualifiedName":"dake_tasks/dake_tasks.Param","preview":"<p>Annotation: The Parameter informataion of a task parameter.</p>"},{"name":"Task","qualifiedName":"dake_tasks/dake_tasks.Task","preview":"<p>Annotation: A task in a task class.</p>"}],"typedef":{},"error":[]},"packageName":"dake_tasks","packageIntro":""}